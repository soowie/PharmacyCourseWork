<Window x:Class="CourseWorkPharmacy.MedicinesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CourseWorkPharmacy"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Medicines" Height="690" Width="900"
        Background="#FFF3F3F3"
        MinHeight="690"
        MinWidth="430">
    <Window.Resources>
        <!--<ObjectDataProvider x:Key="dataFromSymptom" MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:Symptom"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFA0A0A0"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="White"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="250"/>
        </Grid.ColumnDefinitions>
        <DockPanel Grid.Column="0" Margin="5">
            <Grid DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="160"/>
                    <ColumnDefinition Width="150"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0">Medicines List</Label>
                <TextBox TextChanged="SearchByNameBox_TextChanged" Style="{StaticResource placeHolder}" Tag="Search by name" Margin="10 0" Grid.Column="1" x:Name="SearchByNameBox"/>
                <TextBox TextChanged="SearchByDescriptionBox_TextChanged" Style="{StaticResource placeHolder}" Tag="Search by description" Margin="10 0" Grid.Column="2" x:Name="SearchByDescriptionBox"/>

            </Grid>
            <!--<ListView Grid.Row="2" HorizontalAlignment="Stretch" x:Name="MedicinesGridView"
                        Margin="5" SelectionChanged="MedicinesGridView_SelectionChanged"  Grid.RowSpan="2">
                
            </ListView>-->
            <DataGrid SelectionChanged="MyDataGrid_SelectionChanged" CanUserAddRows="false" AutoGenerateColumns="False" VerticalAlignment="Stretch" Margin="5" Grid.Column="0" x:Name="MyDataGrid">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Name, Mode=TwoWay}" Header="Name" Width="7*"/>
                    <DataGridTextColumn Binding="{Binding Description, Mode=TwoWay}" Header="Description" Width="12*"/>
                    <DataGridTextColumn IsReadOnly="True" Binding="{Binding SymptomsString, Mode=OneWay}" Header="Symptoms" Width="5*"/>
                    <DataGridTextColumn Binding="{Binding Price, Mode=TwoWay}" Header="Price" Width="2*"/>
                    <DataGridTextColumn Binding="{Binding Amount, Mode=TwoWay}" Header="Amount" Width="3*"/>
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>

        <StackPanel Grid.Column="1" Margin="5">
            <Label>Choose Window</Label>
            <Border  Margin="0 0 0 10" Padding="10" Height="auto" BorderBrush="#FFABADB3" BorderThickness="1">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="3*"/>
                        </Grid.ColumnDefinitions>
                        <Button Margin="0 0 5 0" Grid.Column="0" x:Name="GoPatientsButton" Click="GoPatientsButton_Click" Padding="0 10" Background="#FF808BFF" Content="Patients" FontFamily="Franklin Gothic Book" Foreground="White" FontSize="14" BorderBrush="{x:Null}" BorderThickness="0"/>
                        <Button Grid.Column="1" x:Name="GoPrescriptionButton" Click="GoPrescriptionButton_Click"  Padding="0 10" Background="#FF808BFF" Content="Make Prescription" FontFamily="Franklin Gothic Book" Foreground="White" FontSize="14" BorderBrush="{x:Null}" BorderThickness="0"/>
                    </Grid>
                </StackPanel>
            </Border>
            <Label>Editing Panel</Label>
            <Border Padding="10" Height="auto" BorderBrush="#FFABADB3" BorderThickness="1">
                <StackPanel x:Name="EditingPanel">
                    
                    <TextBlock>Medicine Name</TextBlock>
                    <TextBox x:Name="MedicineNameBox" Padding="2" Margin="0 5 0 10"></TextBox>
                    
                    <TextBlock>Medicine Description</TextBlock>
                    <TextBox Height="70" TextWrapping="Wrap" x:Name="MedicineDescriptionBox" Padding="2" Margin="0 5 0 10"></TextBox>

                    <TextBlock>Covered Symptoms</TextBlock>
                    <ListView ScrollViewer.VerticalScrollBarVisibility="Visible"
                      ScrollViewer.CanContentScroll="False" MaxHeight="80" Margin="0 5 0 10" Name="SymptomBox">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="Control">
                                <Setter Property="Focusable" Value="False" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        
                    </ListView>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Padding="3" Margin="0 0 0 15" Grid.Column="0" x:Name="GoSymptomsButton" Click="GoSymptomsButton_Click"  Background="#FF808BFF" Content="Edit Symptoms" FontFamily="Franklin Gothic Book" Foreground="White" FontSize="14" BorderBrush="{x:Null}" BorderThickness="0"/>
                    </Grid>

                    <TextBlock>Price</TextBlock>
                    <Grid Margin="0 5 0 10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" x:Name="MedicinePriceBox" Padding="2"></TextBox>
                        <Button Background="#FFF1F1F1" Margin="5 0 0 0" Grid.Column="1" x:Name="PriceIncrementButton" Content="+" Click="PriceIncrementButton_Click" BorderBrush="#FFABADB3"/>
                        <Button Background="#FFF1F1F1" Margin="5 0 0 0" Grid.Column="2" x:Name="PriceDecrementButton" Content="-" Click="PriceDecrementButton_Click" BorderBrush="#FFABADB3"/>
                    </Grid>
                    
                    <TextBlock>Amount</TextBlock>
                    <Grid Margin="0 5 0 10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" x:Name="MedicineAmountBox" Padding="2"></TextBox>
                        <Button Background="#FFF1F1F1" Margin="5 0 0 0" Grid.Column="1" x:Name="AmountIncrementButton" Content="+" Click="AmountIncrementButton_Click"  BorderBrush="#FFABADB3"/>
                        <Button Background="#FFF1F1F1" Margin="5 0 0 0" Grid.Column="2" x:Name="AmountDecrementButton" Content="-" Click="AmountDecrementButton_Click"  BorderBrush="#FFABADB3"/>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Margin="0 0 5 0" Grid.Column="0" x:Name="AddButton" Click="AddButton_Click" Padding="0 10" Background="#FF49FF3D" Content="Add" FontFamily="Franklin Gothic Book" Foreground="White" FontSize="14" BorderBrush="{x:Null}" BorderThickness="0"/>
                        <Button Margin="0 0 5 0" Grid.Column="1" x:Name="SaveButton" Click="SaveButton_Click"  Padding="0 10" Background="#FF49FF3D" Content="Save" FontFamily="Franklin Gothic Book" Foreground="White" FontSize="14" BorderBrush="{x:Null}" BorderThickness="0"/>
                        <Button Grid.Column="2" x:Name="DeleteButton" Click="DeleteButton_Click"  Padding="0 10" Background="#FFFF3D3D" Content="Delete" FontFamily="Franklin Gothic Book" Foreground="White" FontSize="14" BorderBrush="{x:Null}" BorderThickness="0"/>
                    </Grid>
                </StackPanel>
            </Border>
            <Grid Margin="0 10 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Style="{StaticResource ButtonStyle1}" IsEnabled="{Binding Path=AreMedicineChangesUnsaved, Mode=OneWay}" x:Name="DeserializeButton" Click="DeserializeButton_Click"  Margin="0 0 3 0" Padding="0 10" Background="#FFFF3D3D" Grid.Column="0" Content="Undo Changes" FontFamily="Franklin Gothic Book" Foreground="White" FontSize="14" BorderBrush="{x:Null}" BorderThickness="0"/>
                <Button Style="{StaticResource ButtonStyle1}" IsEnabled="{Binding Path=AreMedicineChangesUnsaved, Mode=OneWay}" x:Name="SerializeButton" Click="SerializeButton_Click" Margin="3 0 0 0" Padding="0 10" Background="#FF49FF3D" Grid.Column="1" Content="Save Changes" FontFamily="Franklin Gothic Book" Foreground="White" FontSize="14" BorderBrush="{x:Null}" BorderThickness="0"/>
            </Grid>
            <TextBlock x:Name="ActionInfo"></TextBlock>
            <!--<TextBlock x:Name="WindowHeight" Text="{Binding Path=ListHeight, Mode=TwoWay}"></TextBlock>-->
        </StackPanel>
    </Grid>
</Window>
